// media aliases and breakpoints
$screen-sm-min: 600px;
$screen-md-min: 960px;
$screen-lg-min: 1280px;
$screen-xl-min: 1920px;

$screen-xs-max: 599px;
$screen-sm-max: 959px;
$screen-md-max: 1279px;
$screen-lg-max: 1919px;
$screen-xl-max: 5000px;

// media devices
@mixin xs {
  @media screen and (max-width: #{$screen-xs-max}) {
    @content;
  }
}

@mixin sm {
  @media screen and (min-width: #{$screen-sm-min}) and (max-width: #{$screen-sm-max}) {
    @content;
  }
}

@mixin md {
  @media screen and (min-width: #{$screen-md-min}) and (max-width: #{$screen-md-max}) {
    @content;
  }
}

@mixin lg {
  @media screen and (min-width: #{$screen-lg-min}) and (max-width: #{$screen-lg-max}) {
    @content;
  }
}

@mixin xl {
  @media screen and (min-width: #{$screen-xl-min}) and (max-width: #{$screen-xl-max}) {
    @content;
  }
}

// media lt queries
@mixin lt-sm {
  @media screen and (max-width: #{$screen-xs-max}) {
    @content;
  }
}

@mixin lt-md {
  @media screen and (max-width: #{$screen-sm-max}) {
    @content;
  }
}

@mixin lt-lg {
  @media screen and (max-width: #{$screen-md-max}) {
    @content;
  }
}

@mixin lt-xl {
  @media screen and (max-width: #{$screen-lg-max}) {
    @content;
  }
}

// media gt queries
@mixin gt-xs {
  @media screen and (min-width: #{$screen-sm-min}) {
    @content;
  }
}

@mixin gt-sm {
  @media screen and (min-width: #{$screen-md-min}) {
    @content;
  }
}

@mixin gt-md {
  @media screen and (min-width: #{$screen-lg-min}) {
    @content;
  }
}

@mixin gt-lg {
  @media screen and (min-width: #{$screen-xl-min}) {
    @content;
  }
}


:root {
  line-height: 1.5;
  font-weight: 400;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  font-family: "Gill Sans", sans-serif;
  color-scheme: light dark;
  --primary: 218, 215, 205;
  --secondary: 88, 129, 87;
  --text: 52, 78, 65;
}

html[data-theme="light"]:has(.theme-switch > [type="checkbox"]:not(:checked)) {
  --primary: 2, 2, 2;
  --secondary: 5, 140, 66;
  --text: 22, 219, 101;
}


html,
body {
  margin: 0;
  height: 100%;
  background-color: rgb(var(--primary));
  background-image: linear-gradient(19deg, rgb(var(--primary)) 0%, rgb(var(--secondary)) 100%);
  overflow: hidden;
}

@mixin inputDefault() {
  appearance: none;
  padding: .5rem;
  border-radius: .25rem;
  border-style: solid;
  border-width: 1px;
  background-color: transparent;
  height: 2rem;
  outline: none;
  cursor: pointer;
  border-color: rgb(var(--text));
  color: rgb(var(--text));
  background-color: #ffffff00;
  &::placeholder {
    color: rgba(var(--text), .75);
  }
}

input[type=text],
input[type=password],
textarea {
  @include inputDefault();
  flex: 1;
}

.row, label {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  gap: .5rem;
  width: 100%;
}

button, label:has(#switcher), label.theme-switch {
  @include inputDefault();
  transition: transform .3s ease-in-out;
  &:hover{
    background-color: rgba(var(--secondary), .5);
  }
  &:active{
    transform: scale(.9);
  }
  input[type=checkbox] {
    display: none;
  }
}

svg {
  height: 100%;
  width: 1rem;
  path {
    fill: rgb(var(--text));
  }
}

* {
  box-sizing: border-box;
  transition: background-color 200ms ease-in-out, color 200ms ease-in-out;
}

main {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
}

output#output {
  text-wrap: wrap;
  color: rgb(var(--text));
  word-break: break-all;
  white-space: pre-wrap;
}

h1 {
  margin: 0;
  color: rgb(var(--text));
}

.theme-switch {
  width: auto;
  &:has(input[type=checkbox]:checked) .sun {
    display: none;
  }

  &:has(input[type=checkbox]:not(:checked)) .moon {
    display: none;
  }
  inpur[type=checkbox] {
    display: none;
  }
}

#app {
  display: flex;
  flex-direction: column;
  gap: .75rem;
  padding: 2rem;
  background-color: rgb(var(--primary), 0.45);
  backdrop-filter: blur(7px);
  border-radius: 1rem;
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  border-style: solid;
  border-color: rgb(var(--text));
  border-width: 0.25px;
  max-width: 90%;
  max-height: 90%;
  @include xs {
    height: 100%;
    width: 100%;
    background-color: rgb(var(--primary), 0.25);;
    border-radius: 0;
    align-items: center;
    justify-content: center;
    max-width: 100%;
    max-height: 100%;
    border-style: none;
  }
}